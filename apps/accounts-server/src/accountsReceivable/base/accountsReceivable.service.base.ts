/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  AccountsReceivable as PrismaAccountsReceivable,
} from "@prisma/client";

export class AccountsReceivableServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.AccountsReceivableCountArgs, "select">
  ): Promise<number> {
    return this.prisma.accountsReceivable.count(args);
  }

  async accountsReceivables(
    args: Prisma.AccountsReceivableFindManyArgs
  ): Promise<PrismaAccountsReceivable[]> {
    return this.prisma.accountsReceivable.findMany(args);
  }
  async accountsReceivable(
    args: Prisma.AccountsReceivableFindUniqueArgs
  ): Promise<PrismaAccountsReceivable | null> {
    return this.prisma.accountsReceivable.findUnique(args);
  }
  async createAccountsReceivable(
    args: Prisma.AccountsReceivableCreateArgs
  ): Promise<PrismaAccountsReceivable> {
    return this.prisma.accountsReceivable.create(args);
  }
  async updateAccountsReceivable(
    args: Prisma.AccountsReceivableUpdateArgs
  ): Promise<PrismaAccountsReceivable> {
    return this.prisma.accountsReceivable.update(args);
  }
  async deleteAccountsReceivable(
    args: Prisma.AccountsReceivableDeleteArgs
  ): Promise<PrismaAccountsReceivable> {
    return this.prisma.accountsReceivable.delete(args);
  }
}
