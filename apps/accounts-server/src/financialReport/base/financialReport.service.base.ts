/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  FinancialReport as PrismaFinancialReport,
} from "@prisma/client";

export class FinancialReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.FinancialReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.financialReport.count(args);
  }

  async financialReports(
    args: Prisma.FinancialReportFindManyArgs
  ): Promise<PrismaFinancialReport[]> {
    return this.prisma.financialReport.findMany(args);
  }
  async financialReport(
    args: Prisma.FinancialReportFindUniqueArgs
  ): Promise<PrismaFinancialReport | null> {
    return this.prisma.financialReport.findUnique(args);
  }
  async createFinancialReport(
    args: Prisma.FinancialReportCreateArgs
  ): Promise<PrismaFinancialReport> {
    return this.prisma.financialReport.create(args);
  }
  async updateFinancialReport(
    args: Prisma.FinancialReportUpdateArgs
  ): Promise<PrismaFinancialReport> {
    return this.prisma.financialReport.update(args);
  }
  async deleteFinancialReport(
    args: Prisma.FinancialReportDeleteArgs
  ): Promise<PrismaFinancialReport> {
    return this.prisma.financialReport.delete(args);
  }
}
