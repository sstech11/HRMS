/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceUpdateManyWithoutEmployeesInput } from "./AttendanceUpdateManyWithoutEmployeesInput";
import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { BenefitUpdateManyWithoutEmployeesInput } from "./BenefitUpdateManyWithoutEmployeesInput";
import { LeaveUpdateManyWithoutEmployeesInput } from "./LeaveUpdateManyWithoutEmployeesInput";
import { PayrollUpdateManyWithoutEmployeesInput } from "./PayrollUpdateManyWithoutEmployeesInput";
import { PerformanceUpdateManyWithoutEmployeesInput } from "./PerformanceUpdateManyWithoutEmployeesInput";
import { SelfServiceUpdateManyWithoutEmployeesInput } from "./SelfServiceUpdateManyWithoutEmployeesInput";
import { TalentUpdateManyWithoutEmployeesInput } from "./TalentUpdateManyWithoutEmployeesInput";
import { WorkforceUpdateManyWithoutEmployeesInput } from "./WorkforceUpdateManyWithoutEmployeesInput";

@InputType()
class EmployeeUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => AttendanceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => AttendanceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  attendances?: AttendanceUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => BenefitUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => BenefitUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => BenefitUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  benefits?: BenefitUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateOfBirth?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  hireDate?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string | null;

  @ApiProperty({
    required: false,
    type: () => LeaveUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => LeaveUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => LeaveUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  leaves?: LeaveUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => PayrollUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => PayrollUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => PayrollUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  payrolls?: PayrollUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => PerformanceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => PerformanceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => PerformanceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  performances?: PerformanceUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phone?: string | null;

  @ApiProperty({
    required: false,
    type: () => SelfServiceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => SelfServiceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => SelfServiceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  selfServices?: SelfServiceUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => TalentUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => TalentUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => TalentUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  talents?: TalentUpdateManyWithoutEmployeesInput;

  @ApiProperty({
    required: false,
    type: () => WorkforceUpdateManyWithoutEmployeesInput,
  })
  @ValidateNested()
  @Type(() => WorkforceUpdateManyWithoutEmployeesInput)
  @IsOptional()
  @Field(() => WorkforceUpdateManyWithoutEmployeesInput, {
    nullable: true,
  })
  workforces?: WorkforceUpdateManyWithoutEmployeesInput;
}

export { EmployeeUpdateInput as EmployeeUpdateInput };
