/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AttendanceListRelationFilter } from "../../attendance/base/AttendanceListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { BenefitListRelationFilter } from "../../benefit/base/BenefitListRelationFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { LeaveListRelationFilter } from "../../leave/base/LeaveListRelationFilter";
import { PayrollListRelationFilter } from "../../payroll/base/PayrollListRelationFilter";
import { PerformanceListRelationFilter } from "../../performance/base/PerformanceListRelationFilter";
import { SelfServiceListRelationFilter } from "../../selfService/base/SelfServiceListRelationFilter";
import { TalentListRelationFilter } from "../../talent/base/TalentListRelationFilter";
import { WorkforceListRelationFilter } from "../../workforce/base/WorkforceListRelationFilter";

@InputType()
class EmployeeWhereInput {
  @ApiProperty({
    required: false,
    type: () => AttendanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AttendanceListRelationFilter)
  @IsOptional()
  @Field(() => AttendanceListRelationFilter, {
    nullable: true,
  })
  attendances?: AttendanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => BenefitListRelationFilter,
  })
  @ValidateNested()
  @Type(() => BenefitListRelationFilter)
  @IsOptional()
  @Field(() => BenefitListRelationFilter, {
    nullable: true,
  })
  benefits?: BenefitListRelationFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateOfBirth?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  email?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  firstName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  hireDate?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  lastName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => LeaveListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LeaveListRelationFilter)
  @IsOptional()
  @Field(() => LeaveListRelationFilter, {
    nullable: true,
  })
  leaves?: LeaveListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PayrollListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PayrollListRelationFilter)
  @IsOptional()
  @Field(() => PayrollListRelationFilter, {
    nullable: true,
  })
  payrolls?: PayrollListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PerformanceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => PerformanceListRelationFilter)
  @IsOptional()
  @Field(() => PerformanceListRelationFilter, {
    nullable: true,
  })
  performances?: PerformanceListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phone?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => SelfServiceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SelfServiceListRelationFilter)
  @IsOptional()
  @Field(() => SelfServiceListRelationFilter, {
    nullable: true,
  })
  selfServices?: SelfServiceListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TalentListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TalentListRelationFilter)
  @IsOptional()
  @Field(() => TalentListRelationFilter, {
    nullable: true,
  })
  talents?: TalentListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => WorkforceListRelationFilter,
  })
  @ValidateNested()
  @Type(() => WorkforceListRelationFilter)
  @IsOptional()
  @Field(() => WorkforceListRelationFilter, {
    nullable: true,
  })
  workforces?: WorkforceListRelationFilter;
}

export { EmployeeWhereInput as EmployeeWhereInput };
